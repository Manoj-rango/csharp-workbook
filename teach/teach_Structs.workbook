---
uti: com.xamarin.workbook
id: e49727af-7915-406f-b926-8ab6d78c111a
title: teach_Structs
platforms:
- Console
---

```csharp
//struct type-declration
struct BankAccountData
{
    public long BankID;
    public string AccountName;
    public int DOB;
    public long Aadhar;
    public bool carloan;
}
//creating a new variable/instance of struct
BankAccountData Account1 = new BankAccountData();

// filling struct 'public' variables
Account1.BankID = 110012345678;
Account1.AccountName = "Chanti";
```

```csharp
struct BankAccountData
{
    public long BankID;
    public string AccountName;
    public int DOB;
    public long Aadhar;
    public bool carloan;
}

Dictionary<long, BankAccountData> accounts = new Dictionary<long, BankAccountData>();
//create new account data for account1
BankAccountData Account1 = new BankAccountData();
Account1.BankID = 2525226737232323;
Account1.AccountName = "asdfsdf";

accounts.Add(Account1.BankID, Account1); // adding new data

BankAccountData getAcoount =  accounts[2525226737232323]; //gettting data
```

```csharp
Dictionary<string, string> logins = new Dictionary<string, string>();
logins.Add("user1", "Password1");

logins.ContainsKey("user1");
string serverpwd = logins["user1"]
```

```csharp
Dictionary<int, string> indexes = new Dictionary<int, string>();
indexes.Add(1, "First");
indexes.Add(2, "Second");
indexes.Add(3, "Third");
indexes.Add(4, "Four");

int givenid = 2;
string givenpwd = "Second";

if(indexes.ContainsKey(givenid))
{
    if(givenpwd == indexes[givenid])
    {
        Console.WriteLine("login successful");
    }
    else
    {
        Console.WriteLine("login unsuccessful");
    }
}
else
{
    Console.WriteLine("user not available");
}
```