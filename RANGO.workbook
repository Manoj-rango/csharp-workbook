---
uti: com.xamarin.workbook
id: 6c0fd535-9092-4538-8de5-9a668404bfdf
title: RANGO
platforms:
- Console
---

```csharp
/* logging messages */
Console.WriteLine("fall back");
Console.WriteLine("addition of 12 + 8 is " +  (12 + 8 ) );
Console.WriteLine((4*2) + 3);
Console.WriteLine(12345);
```

```csharp
/*basic types of varialbes decleration */

int a = 12;
float b = 123.23f;
double c = 12.4678831;
string d = " LA CASA DE PAPEL";
Console.WriteLine(d);
Console.WriteLine(a + b );
Console.WriteLine( " one of the popular series in netflix is " + d);
bool moneyheist = true;
Console.WriteLine( " money heist is a popular series in netflix ? " + moneyheist );
```

```csharp
/* assignment operators */
int pen = 20;
Console.WriteLine(pen);
pen += 5;
Console.WriteLine(pen);
pen -= 25;
Console.WriteLine(pen);
//
int pencil = 10;
Console.WriteLine(pencil);
pencil ++ ;
Console.WriteLine(pencil);
pencil--;
Console.WriteLine(pencil);
```

```csharp
//variable calculations
int  q = 12;
int w = 13;
int e = q + w;
Console.WriteLine(w);
```

```csharp
// logging with variables 
int book1 = 35;
int book2 = 40;
int total = book1 + book2;
Console.WriteLine(" if a = " + book1 + " and b = " + book2 + " then addition of a and b is = " + total );
```

```csharp
//  basic decleration
int attribute = 21;
// type/attribute name/assignment/value/end
```

```csharp
/*generic key words
you always need a string used as a bridge to connect diffferent types of variables*/
```

```csharp
/* sequential programming
the process should be clear , if middle line breaks further process doesn't work*/
```

```csharp
/* ARRAYS*/
// arrays are containers that similar data of similar types
int[] even_num = new int[4];// basic decleration
int [] odd_num = {1,3,5,56,7};
int index = 2;
odd_num[index]=5;
Console.WriteLine($" value at index odd_num [{index}]=" + odd_num[index]);
```

```csharp
int [] bankbalance = {123,243,45,678,433};
int account_no = 4;
Console.WriteLine($" value at index bankbalance[{account_no}] = " + bankbalance[account_no]);
```

```csharp
// array methods
int[] prime_num = {1,3,5,7,11};
Console.WriteLine( "lenght of array = " + prime_num.Length);
Console.WriteLine("lenght of array = "+ prime_num[4]);
```

```csharp
// reusable code containers
void subtract (int parama, int paramb)
{
    Console.WriteLine(" subtraction of param a and param b = " + ( parama - paramb) );
}
void subtractnoparams()
{
  Console.WriteLine(" no params = "+(10*5 ) );
}
subtract(12,10);
subtract(10,5);
```

```csharp
// DYNAMIC ARRAYS
List<int> bankaccounts = new List<int>();
bankaccounts.Add(234);
bankaccounts.Add(578);
Console.WriteLine(bankaccounts.Count);
Console.WriteLine(bankaccounts[2]);
bankaccounts.RemoveAt(0);
Console.WriteLine(bankaccounts.Count);
bankaccounts.Add(96);
Console.WriteLine(bankaccounts.Count);
```

```csharp
List<string> bartender = new List<string>{"keep","on","practise","to","achieve"};
bartender.RemoveAt(1);
Console.WriteLine(bartender.Count);
bartender;
```

```csharp
// CONDITIONS
// IF condition
int x = 12;
if ( x == 13)
{
    Console.WriteLine( " x is equal ");
}

// if - else condition
int q = 12;
int e = 13;
if ( q == e)
{
    Console.WriteLine(" q equals to e"+ (q == e));
}
else 
{
    Console.WriteLine("q not equals to e "+ (q == e));
}
```

```csharp
// Greater and lesser
int q = 12;
int w = 13;
if ( q < w )
{ 
    Console.WriteLine( " q < w :" + (q < w ));
}
if ( q > w )
{
    Console.WriteLine("q > w :"  +  (q > w) );
}
```

```csharp
// if elseif  else
//nested if else 
// PROGRAM ENDS as soon as ONE condition is true
```

```csharp
// BOOL condition 
bool areyouaprogrammer = true;
if( areyouaprogrammer)
{
    Console.WriteLine(" yup");
}
else 
{
    Console.WriteLine("nope ");
}
```

```csharp
// NOT operator
// BOOL condition 
bool areyouaprogrammer = true;
Console.WriteLine(!areyouaprogrammer);
if(! areyouaprogrammer)
{
    Console.WriteLine(" yup");
}
else 
{
    Console.WriteLine("nope ");
}
```

```csharp
// left side and right side ( x < y) (y < x)
// if    elseif    else
```

```csharp
// or operator 
bool heisfine = true;
bool sheisfine = false;
if ( heisfine||sheisfine)
{
    Console.WriteLine( " guess the answer ");
}
else
{
    Console.WriteLine( " or else go away");
}
```

```csharp
// and operator

bool heisfine = true;
bool sheisnotfine = false;
if ( heisfine && sheisnotfine)
{
    Console.WriteLine( " guess the answer ");
}
else
{
    Console.WriteLine( " or else go away");
}
```